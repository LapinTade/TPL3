State 0:
start' -> . start [ # ]
-- On WHILE shift to state 1
-- On VAR shift to state 91
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On IF shift to state 49
-- On FOR shift to state 51
-- On FLOAT shift to state 9
-- On DO shift to state 53
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 95
-- On stmt shift to state 96
-- On start2 shift to state 97
-- On start shift to state 99
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On expr shift to state 100
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 1:
whiles -> WHILE . expr terminated_stmt [ WHILE EOF ELSE ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 44

State 2:
expr -> VAR . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> VAR . OPENCRO expr CLOSECRO [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On OPENCRO shift to state 3
-- On WHILE reduce production expr -> VAR 
-- On VAR reduce production expr -> VAR 
-- On TIMES reduce production expr -> VAR 
-- On PV reduce production expr -> VAR 
-- On PLUS reduce production expr -> VAR 
-- On PIN reduce production expr -> VAR 
-- On OR reduce production expr -> VAR 
-- On NEQ reduce production expr -> VAR 
-- On MINUS reduce production expr -> VAR 
-- On LT reduce production expr -> VAR 
-- On LEQ reduce production expr -> VAR 
-- On IF reduce production expr -> VAR 
-- On GT reduce production expr -> VAR 
-- On GEQ reduce production expr -> VAR 
-- On FOR reduce production expr -> VAR 
-- On EQ reduce production expr -> VAR 
-- On EOF reduce production expr -> VAR 
-- On DP reduce production expr -> VAR 
-- On DO reduce production expr -> VAR 
-- On DIVIDE reduce production expr -> VAR 
-- On CLOSEPAR reduce production expr -> VAR 
-- On CLOSECRO reduce production expr -> VAR 
-- On AND reduce production expr -> VAR 
-- On ACOPEN reduce production expr -> VAR 

State 3:
expr -> VAR OPENCRO . expr CLOSECRO [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 42

State 4:
expr -> STRING . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> STRING 
-- On VAR reduce production expr -> STRING 
-- On TIMES reduce production expr -> STRING 
-- On PV reduce production expr -> STRING 
-- On PLUS reduce production expr -> STRING 
-- On PIN reduce production expr -> STRING 
-- On OR reduce production expr -> STRING 
-- On NEQ reduce production expr -> STRING 
-- On MINUS reduce production expr -> STRING 
-- On LT reduce production expr -> STRING 
-- On LEQ reduce production expr -> STRING 
-- On IF reduce production expr -> STRING 
-- On GT reduce production expr -> STRING 
-- On GEQ reduce production expr -> STRING 
-- On FOR reduce production expr -> STRING 
-- On EQ reduce production expr -> STRING 
-- On EOF reduce production expr -> STRING 
-- On DP reduce production expr -> STRING 
-- On DO reduce production expr -> STRING 
-- On DIVIDE reduce production expr -> STRING 
-- On CLOSEPAR reduce production expr -> STRING 
-- On CLOSECRO reduce production expr -> STRING 
-- On AND reduce production expr -> STRING 
-- On ACOPEN reduce production expr -> STRING 

State 5:
expr -> OPENPAR . expr CLOSEPAR [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 12

State 6:
expr -> NOT . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 11

State 7:
expr -> MINUS . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 10

State 8:
expr -> INT . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> INT 
-- On VAR reduce production expr -> INT 
-- On TIMES reduce production expr -> INT 
-- On PV reduce production expr -> INT 
-- On PLUS reduce production expr -> INT 
-- On PIN reduce production expr -> INT 
-- On OR reduce production expr -> INT 
-- On NEQ reduce production expr -> INT 
-- On MINUS reduce production expr -> INT 
-- On LT reduce production expr -> INT 
-- On LEQ reduce production expr -> INT 
-- On IF reduce production expr -> INT 
-- On GT reduce production expr -> INT 
-- On GEQ reduce production expr -> INT 
-- On FOR reduce production expr -> INT 
-- On EQ reduce production expr -> INT 
-- On EOF reduce production expr -> INT 
-- On DP reduce production expr -> INT 
-- On DO reduce production expr -> INT 
-- On DIVIDE reduce production expr -> INT 
-- On CLOSEPAR reduce production expr -> INT 
-- On CLOSECRO reduce production expr -> INT 
-- On AND reduce production expr -> INT 
-- On ACOPEN reduce production expr -> INT 

State 9:
expr -> FLOAT . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> FLOAT 
-- On VAR reduce production expr -> FLOAT 
-- On TIMES reduce production expr -> FLOAT 
-- On PV reduce production expr -> FLOAT 
-- On PLUS reduce production expr -> FLOAT 
-- On PIN reduce production expr -> FLOAT 
-- On OR reduce production expr -> FLOAT 
-- On NEQ reduce production expr -> FLOAT 
-- On MINUS reduce production expr -> FLOAT 
-- On LT reduce production expr -> FLOAT 
-- On LEQ reduce production expr -> FLOAT 
-- On IF reduce production expr -> FLOAT 
-- On GT reduce production expr -> FLOAT 
-- On GEQ reduce production expr -> FLOAT 
-- On FOR reduce production expr -> FLOAT 
-- On EQ reduce production expr -> FLOAT 
-- On EOF reduce production expr -> FLOAT 
-- On DP reduce production expr -> FLOAT 
-- On DO reduce production expr -> FLOAT 
-- On DIVIDE reduce production expr -> FLOAT 
-- On CLOSEPAR reduce production expr -> FLOAT 
-- On CLOSECRO reduce production expr -> FLOAT 
-- On AND reduce production expr -> FLOAT 
-- On ACOPEN reduce production expr -> FLOAT 

State 10:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> MINUS expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> MINUS expr 
-- On VAR reduce production expr -> MINUS expr 
-- On TIMES reduce production expr -> MINUS expr 
-- On PV reduce production expr -> MINUS expr 
-- On PLUS reduce production expr -> MINUS expr 
-- On PIN reduce production expr -> MINUS expr 
-- On OR reduce production expr -> MINUS expr 
-- On NEQ reduce production expr -> MINUS expr 
-- On MINUS reduce production expr -> MINUS expr 
-- On LT reduce production expr -> MINUS expr 
-- On LEQ reduce production expr -> MINUS expr 
-- On IF reduce production expr -> MINUS expr 
-- On GT reduce production expr -> MINUS expr 
-- On GEQ reduce production expr -> MINUS expr 
-- On FOR reduce production expr -> MINUS expr 
-- On EQ reduce production expr -> MINUS expr 
-- On EOF reduce production expr -> MINUS expr 
-- On DP reduce production expr -> MINUS expr 
-- On DO reduce production expr -> MINUS expr 
-- On DIVIDE reduce production expr -> MINUS expr 
-- On CLOSEPAR reduce production expr -> MINUS expr 
-- On CLOSECRO reduce production expr -> MINUS expr 
-- On AND reduce production expr -> MINUS expr 
-- On ACOPEN reduce production expr -> MINUS expr 

State 11:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> NOT expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> NOT expr 
-- On VAR reduce production expr -> NOT expr 
-- On TIMES reduce production expr -> NOT expr 
-- On PV reduce production expr -> NOT expr 
-- On PLUS reduce production expr -> NOT expr 
-- On PIN reduce production expr -> NOT expr 
-- On OR reduce production expr -> NOT expr 
-- On NEQ reduce production expr -> NOT expr 
-- On MINUS reduce production expr -> NOT expr 
-- On LT reduce production expr -> NOT expr 
-- On LEQ reduce production expr -> NOT expr 
-- On IF reduce production expr -> NOT expr 
-- On GT reduce production expr -> NOT expr 
-- On GEQ reduce production expr -> NOT expr 
-- On FOR reduce production expr -> NOT expr 
-- On EQ reduce production expr -> NOT expr 
-- On EOF reduce production expr -> NOT expr 
-- On DP reduce production expr -> NOT expr 
-- On DO reduce production expr -> NOT expr 
-- On DIVIDE reduce production expr -> NOT expr 
-- On CLOSEPAR reduce production expr -> NOT expr 
-- On CLOSECRO reduce production expr -> NOT expr 
-- On AND reduce production expr -> NOT expr 
-- On ACOPEN reduce production expr -> NOT expr 

State 12:
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
expr -> OPENPAR expr . CLOSEPAR [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSEPAR AND ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On CLOSEPAR shift to state 41
-- On AND shift to state 39

State 13:
expr -> expr TIMES . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 14

State 14:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr TIMES expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> expr TIMES expr 
-- On VAR reduce production expr -> expr TIMES expr 
-- On TIMES reduce production expr -> expr TIMES expr 
-- On PV reduce production expr -> expr TIMES expr 
-- On PLUS reduce production expr -> expr TIMES expr 
-- On PIN reduce production expr -> expr TIMES expr 
-- On OR reduce production expr -> expr TIMES expr 
-- On NEQ reduce production expr -> expr TIMES expr 
-- On MINUS reduce production expr -> expr TIMES expr 
-- On LT reduce production expr -> expr TIMES expr 
-- On LEQ reduce production expr -> expr TIMES expr 
-- On IF reduce production expr -> expr TIMES expr 
-- On GT reduce production expr -> expr TIMES expr 
-- On GEQ reduce production expr -> expr TIMES expr 
-- On FOR reduce production expr -> expr TIMES expr 
-- On EQ reduce production expr -> expr TIMES expr 
-- On EOF reduce production expr -> expr TIMES expr 
-- On DP reduce production expr -> expr TIMES expr 
-- On DO reduce production expr -> expr TIMES expr 
-- On DIVIDE reduce production expr -> expr TIMES expr 
-- On CLOSEPAR reduce production expr -> expr TIMES expr 
-- On CLOSECRO reduce production expr -> expr TIMES expr 
-- On AND reduce production expr -> expr TIMES expr 
-- On ACOPEN reduce production expr -> expr TIMES expr 

State 15:
expr -> expr PLUS . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 16

State 16:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr PLUS expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr PLUS expr 
-- On VAR reduce production expr -> expr PLUS expr 
-- On PV reduce production expr -> expr PLUS expr 
-- On PLUS reduce production expr -> expr PLUS expr 
-- On PIN reduce production expr -> expr PLUS expr 
-- On OR reduce production expr -> expr PLUS expr 
-- On NEQ reduce production expr -> expr PLUS expr 
-- On MINUS reduce production expr -> expr PLUS expr 
-- On LT reduce production expr -> expr PLUS expr 
-- On LEQ reduce production expr -> expr PLUS expr 
-- On IF reduce production expr -> expr PLUS expr 
-- On GT reduce production expr -> expr PLUS expr 
-- On GEQ reduce production expr -> expr PLUS expr 
-- On FOR reduce production expr -> expr PLUS expr 
-- On EQ reduce production expr -> expr PLUS expr 
-- On EOF reduce production expr -> expr PLUS expr 
-- On DP reduce production expr -> expr PLUS expr 
-- On DO reduce production expr -> expr PLUS expr 
-- On CLOSEPAR reduce production expr -> expr PLUS expr 
-- On CLOSECRO reduce production expr -> expr PLUS expr 
-- On AND reduce production expr -> expr PLUS expr 
-- On ACOPEN reduce production expr -> expr PLUS expr 

State 17:
expr -> expr DIVIDE . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 18

State 18:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr DIVIDE expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> expr DIVIDE expr 
-- On VAR reduce production expr -> expr DIVIDE expr 
-- On TIMES reduce production expr -> expr DIVIDE expr 
-- On PV reduce production expr -> expr DIVIDE expr 
-- On PLUS reduce production expr -> expr DIVIDE expr 
-- On PIN reduce production expr -> expr DIVIDE expr 
-- On OR reduce production expr -> expr DIVIDE expr 
-- On NEQ reduce production expr -> expr DIVIDE expr 
-- On MINUS reduce production expr -> expr DIVIDE expr 
-- On LT reduce production expr -> expr DIVIDE expr 
-- On LEQ reduce production expr -> expr DIVIDE expr 
-- On IF reduce production expr -> expr DIVIDE expr 
-- On GT reduce production expr -> expr DIVIDE expr 
-- On GEQ reduce production expr -> expr DIVIDE expr 
-- On FOR reduce production expr -> expr DIVIDE expr 
-- On EQ reduce production expr -> expr DIVIDE expr 
-- On EOF reduce production expr -> expr DIVIDE expr 
-- On DP reduce production expr -> expr DIVIDE expr 
-- On DO reduce production expr -> expr DIVIDE expr 
-- On DIVIDE reduce production expr -> expr DIVIDE expr 
-- On CLOSEPAR reduce production expr -> expr DIVIDE expr 
-- On CLOSECRO reduce production expr -> expr DIVIDE expr 
-- On AND reduce production expr -> expr DIVIDE expr 
-- On ACOPEN reduce production expr -> expr DIVIDE expr 

State 19:
expr -> expr PIN . expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 20

State 20:
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DP DIVIDE AND ]
expr -> expr PIN expr . DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DP shift to state 37
-- On DIVIDE shift to state 17
-- On AND shift to state 39

State 21:
expr -> expr OR . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 22

State 22:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr OR expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr OR expr 
-- On VAR reduce production expr -> expr OR expr 
-- On PV reduce production expr -> expr OR expr 
-- On PIN reduce production expr -> expr OR expr 
-- On OR reduce production expr -> expr OR expr 
-- On IF reduce production expr -> expr OR expr 
-- On FOR reduce production expr -> expr OR expr 
-- On EOF reduce production expr -> expr OR expr 
-- On DP reduce production expr -> expr OR expr 
-- On DO reduce production expr -> expr OR expr 
-- On CLOSEPAR reduce production expr -> expr OR expr 
-- On CLOSECRO reduce production expr -> expr OR expr 
-- On AND reduce production expr -> expr OR expr 
-- On ACOPEN reduce production expr -> expr OR expr 

State 23:
expr -> expr NEQ . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 24

State 24:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr NEQ expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr NEQ expr 
-- On VAR reduce production expr -> expr NEQ expr 
-- On PV reduce production expr -> expr NEQ expr 
-- On PIN reduce production expr -> expr NEQ expr 
-- On OR reduce production expr -> expr NEQ expr 
-- On NEQ reduce production expr -> expr NEQ expr 
-- On IF reduce production expr -> expr NEQ expr 
-- On FOR reduce production expr -> expr NEQ expr 
-- On EQ reduce production expr -> expr NEQ expr 
-- On EOF reduce production expr -> expr NEQ expr 
-- On DP reduce production expr -> expr NEQ expr 
-- On DO reduce production expr -> expr NEQ expr 
-- On CLOSEPAR reduce production expr -> expr NEQ expr 
-- On CLOSECRO reduce production expr -> expr NEQ expr 
-- On AND reduce production expr -> expr NEQ expr 
-- On ACOPEN reduce production expr -> expr NEQ expr 

State 25:
expr -> expr MINUS . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 26

State 26:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr MINUS expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr MINUS expr 
-- On VAR reduce production expr -> expr MINUS expr 
-- On PV reduce production expr -> expr MINUS expr 
-- On PLUS reduce production expr -> expr MINUS expr 
-- On PIN reduce production expr -> expr MINUS expr 
-- On OR reduce production expr -> expr MINUS expr 
-- On NEQ reduce production expr -> expr MINUS expr 
-- On MINUS reduce production expr -> expr MINUS expr 
-- On LT reduce production expr -> expr MINUS expr 
-- On LEQ reduce production expr -> expr MINUS expr 
-- On IF reduce production expr -> expr MINUS expr 
-- On GT reduce production expr -> expr MINUS expr 
-- On GEQ reduce production expr -> expr MINUS expr 
-- On FOR reduce production expr -> expr MINUS expr 
-- On EQ reduce production expr -> expr MINUS expr 
-- On EOF reduce production expr -> expr MINUS expr 
-- On DP reduce production expr -> expr MINUS expr 
-- On DO reduce production expr -> expr MINUS expr 
-- On CLOSEPAR reduce production expr -> expr MINUS expr 
-- On CLOSECRO reduce production expr -> expr MINUS expr 
-- On AND reduce production expr -> expr MINUS expr 
-- On ACOPEN reduce production expr -> expr MINUS expr 

State 27:
expr -> expr LT . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 28

State 28:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr LT expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr LT expr 
-- On VAR reduce production expr -> expr LT expr 
-- On PV reduce production expr -> expr LT expr 
-- On PIN reduce production expr -> expr LT expr 
-- On OR reduce production expr -> expr LT expr 
-- On NEQ reduce production expr -> expr LT expr 
-- On LT reduce production expr -> expr LT expr 
-- On LEQ reduce production expr -> expr LT expr 
-- On IF reduce production expr -> expr LT expr 
-- On GT reduce production expr -> expr LT expr 
-- On GEQ reduce production expr -> expr LT expr 
-- On FOR reduce production expr -> expr LT expr 
-- On EQ reduce production expr -> expr LT expr 
-- On EOF reduce production expr -> expr LT expr 
-- On DP reduce production expr -> expr LT expr 
-- On DO reduce production expr -> expr LT expr 
-- On CLOSEPAR reduce production expr -> expr LT expr 
-- On CLOSECRO reduce production expr -> expr LT expr 
-- On AND reduce production expr -> expr LT expr 
-- On ACOPEN reduce production expr -> expr LT expr 

State 29:
expr -> expr LEQ . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 30

State 30:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr LEQ expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr LEQ expr 
-- On VAR reduce production expr -> expr LEQ expr 
-- On PV reduce production expr -> expr LEQ expr 
-- On PIN reduce production expr -> expr LEQ expr 
-- On OR reduce production expr -> expr LEQ expr 
-- On NEQ reduce production expr -> expr LEQ expr 
-- On LT reduce production expr -> expr LEQ expr 
-- On LEQ reduce production expr -> expr LEQ expr 
-- On IF reduce production expr -> expr LEQ expr 
-- On GT reduce production expr -> expr LEQ expr 
-- On GEQ reduce production expr -> expr LEQ expr 
-- On FOR reduce production expr -> expr LEQ expr 
-- On EQ reduce production expr -> expr LEQ expr 
-- On EOF reduce production expr -> expr LEQ expr 
-- On DP reduce production expr -> expr LEQ expr 
-- On DO reduce production expr -> expr LEQ expr 
-- On CLOSEPAR reduce production expr -> expr LEQ expr 
-- On CLOSECRO reduce production expr -> expr LEQ expr 
-- On AND reduce production expr -> expr LEQ expr 
-- On ACOPEN reduce production expr -> expr LEQ expr 

State 31:
expr -> expr GT . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 32

State 32:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr GT expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr GT expr 
-- On VAR reduce production expr -> expr GT expr 
-- On PV reduce production expr -> expr GT expr 
-- On PIN reduce production expr -> expr GT expr 
-- On OR reduce production expr -> expr GT expr 
-- On NEQ reduce production expr -> expr GT expr 
-- On LT reduce production expr -> expr GT expr 
-- On LEQ reduce production expr -> expr GT expr 
-- On IF reduce production expr -> expr GT expr 
-- On GT reduce production expr -> expr GT expr 
-- On GEQ reduce production expr -> expr GT expr 
-- On FOR reduce production expr -> expr GT expr 
-- On EQ reduce production expr -> expr GT expr 
-- On EOF reduce production expr -> expr GT expr 
-- On DP reduce production expr -> expr GT expr 
-- On DO reduce production expr -> expr GT expr 
-- On CLOSEPAR reduce production expr -> expr GT expr 
-- On CLOSECRO reduce production expr -> expr GT expr 
-- On AND reduce production expr -> expr GT expr 
-- On ACOPEN reduce production expr -> expr GT expr 

State 33:
expr -> expr GEQ . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 34

State 34:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr GEQ expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr GEQ expr 
-- On VAR reduce production expr -> expr GEQ expr 
-- On PV reduce production expr -> expr GEQ expr 
-- On PIN reduce production expr -> expr GEQ expr 
-- On OR reduce production expr -> expr GEQ expr 
-- On NEQ reduce production expr -> expr GEQ expr 
-- On LT reduce production expr -> expr GEQ expr 
-- On LEQ reduce production expr -> expr GEQ expr 
-- On IF reduce production expr -> expr GEQ expr 
-- On GT reduce production expr -> expr GEQ expr 
-- On GEQ reduce production expr -> expr GEQ expr 
-- On FOR reduce production expr -> expr GEQ expr 
-- On EQ reduce production expr -> expr GEQ expr 
-- On EOF reduce production expr -> expr GEQ expr 
-- On DP reduce production expr -> expr GEQ expr 
-- On DO reduce production expr -> expr GEQ expr 
-- On CLOSEPAR reduce production expr -> expr GEQ expr 
-- On CLOSECRO reduce production expr -> expr GEQ expr 
-- On AND reduce production expr -> expr GEQ expr 
-- On ACOPEN reduce production expr -> expr GEQ expr 

State 35:
expr -> expr EQ . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 36

State 36:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr EQ expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr EQ expr 
-- On VAR reduce production expr -> expr EQ expr 
-- On PV reduce production expr -> expr EQ expr 
-- On PIN reduce production expr -> expr EQ expr 
-- On OR reduce production expr -> expr EQ expr 
-- On NEQ reduce production expr -> expr EQ expr 
-- On IF reduce production expr -> expr EQ expr 
-- On FOR reduce production expr -> expr EQ expr 
-- On EQ reduce production expr -> expr EQ expr 
-- On EOF reduce production expr -> expr EQ expr 
-- On DP reduce production expr -> expr EQ expr 
-- On DO reduce production expr -> expr EQ expr 
-- On CLOSEPAR reduce production expr -> expr EQ expr 
-- On CLOSECRO reduce production expr -> expr EQ expr 
-- On AND reduce production expr -> expr EQ expr 
-- On ACOPEN reduce production expr -> expr EQ expr 

State 37:
expr -> expr PIN expr DP . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 38

State 38:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr PIN expr DP expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On WHILE reduce production expr -> expr PIN expr DP expr 
-- On VAR reduce production expr -> expr PIN expr DP expr 
-- On TIMES reduce production expr -> expr PIN expr DP expr 
-- On PV reduce production expr -> expr PIN expr DP expr 
-- On PLUS reduce production expr -> expr PIN expr DP expr 
-- On PIN reduce production expr -> expr PIN expr DP expr 
-- On OR reduce production expr -> expr PIN expr DP expr 
-- On NEQ reduce production expr -> expr PIN expr DP expr 
-- On MINUS reduce production expr -> expr PIN expr DP expr 
-- On LT reduce production expr -> expr PIN expr DP expr 
-- On LEQ reduce production expr -> expr PIN expr DP expr 
-- On IF reduce production expr -> expr PIN expr DP expr 
-- On GT reduce production expr -> expr PIN expr DP expr 
-- On GEQ reduce production expr -> expr PIN expr DP expr 
-- On FOR reduce production expr -> expr PIN expr DP expr 
-- On EQ reduce production expr -> expr PIN expr DP expr 
-- On EOF reduce production expr -> expr PIN expr DP expr 
-- On DP reduce production expr -> expr PIN expr DP expr 
-- On DO reduce production expr -> expr PIN expr DP expr 
-- On DIVIDE reduce production expr -> expr PIN expr DP expr 
-- On CLOSEPAR reduce production expr -> expr PIN expr DP expr 
-- On CLOSECRO reduce production expr -> expr PIN expr DP expr 
-- On AND reduce production expr -> expr PIN expr DP expr 
-- On ACOPEN reduce production expr -> expr PIN expr DP expr 
** Conflict on TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND

State 39:
expr -> expr AND . expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 40

State 40:
expr -> expr . PLUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr AND expr . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On WHILE reduce production expr -> expr AND expr 
-- On VAR reduce production expr -> expr AND expr 
-- On PV reduce production expr -> expr AND expr 
-- On PIN reduce production expr -> expr AND expr 
-- On OR reduce production expr -> expr AND expr 
-- On IF reduce production expr -> expr AND expr 
-- On FOR reduce production expr -> expr AND expr 
-- On EOF reduce production expr -> expr AND expr 
-- On DP reduce production expr -> expr AND expr 
-- On DO reduce production expr -> expr AND expr 
-- On CLOSEPAR reduce production expr -> expr AND expr 
-- On CLOSECRO reduce production expr -> expr AND expr 
-- On AND reduce production expr -> expr AND expr 
-- On ACOPEN reduce production expr -> expr AND expr 

State 41:
expr -> OPENPAR expr CLOSEPAR . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> OPENPAR expr CLOSEPAR 
-- On VAR reduce production expr -> OPENPAR expr CLOSEPAR 
-- On TIMES reduce production expr -> OPENPAR expr CLOSEPAR 
-- On PV reduce production expr -> OPENPAR expr CLOSEPAR 
-- On PLUS reduce production expr -> OPENPAR expr CLOSEPAR 
-- On PIN reduce production expr -> OPENPAR expr CLOSEPAR 
-- On OR reduce production expr -> OPENPAR expr CLOSEPAR 
-- On NEQ reduce production expr -> OPENPAR expr CLOSEPAR 
-- On MINUS reduce production expr -> OPENPAR expr CLOSEPAR 
-- On LT reduce production expr -> OPENPAR expr CLOSEPAR 
-- On LEQ reduce production expr -> OPENPAR expr CLOSEPAR 
-- On IF reduce production expr -> OPENPAR expr CLOSEPAR 
-- On GT reduce production expr -> OPENPAR expr CLOSEPAR 
-- On GEQ reduce production expr -> OPENPAR expr CLOSEPAR 
-- On FOR reduce production expr -> OPENPAR expr CLOSEPAR 
-- On EQ reduce production expr -> OPENPAR expr CLOSEPAR 
-- On EOF reduce production expr -> OPENPAR expr CLOSEPAR 
-- On DP reduce production expr -> OPENPAR expr CLOSEPAR 
-- On DO reduce production expr -> OPENPAR expr CLOSEPAR 
-- On DIVIDE reduce production expr -> OPENPAR expr CLOSEPAR 
-- On CLOSEPAR reduce production expr -> OPENPAR expr CLOSEPAR 
-- On CLOSECRO reduce production expr -> OPENPAR expr CLOSEPAR 
-- On AND reduce production expr -> OPENPAR expr CLOSEPAR 
-- On ACOPEN reduce production expr -> OPENPAR expr CLOSEPAR 

State 42:
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> VAR OPENCRO expr . CLOSECRO [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On CLOSECRO shift to state 43
-- On AND shift to state 39

State 43:
expr -> VAR OPENCRO expr CLOSECRO . [ WHILE VAR TIMES PV PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ EOF DP DO DIVIDE CLOSEPAR CLOSECRO AND ACOPEN ]
-- On WHILE reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On VAR reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On TIMES reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PV reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PLUS reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PIN reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On OR reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On NEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On MINUS reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On LT reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On LEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On IF reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On GT reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On GEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On FOR reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On EQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On EOF reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On DP reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On DO reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On DIVIDE reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On CLOSEPAR reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On CLOSECRO reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On AND reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On ACOPEN reduce production expr -> VAR OPENCRO expr CLOSECRO 

State 44:
expr -> expr . PLUS expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
whiles -> WHILE expr . terminated_stmt [ WHILE EOF ELSE ]
-- On WHILE shift to state 1
-- On VAR shift to state 45
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On IF shift to state 49
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On FOR shift to state 51
-- On EQ shift to state 35
-- On DO shift to state 53
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 90
-- On stmt shift to state 75
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 45:
assignable -> VAR . [ PP PE MM ME ASSIGN ]
assignable -> VAR . OPENCRO expr CLOSECRO [ PP PE MM ME ASSIGN ]
-- On OPENCRO shift to state 46
-- On PP reduce production assignable -> VAR 
-- On PE reduce production assignable -> VAR 
-- On MM reduce production assignable -> VAR 
-- On ME reduce production assignable -> VAR 
-- On ASSIGN reduce production assignable -> VAR 

State 46:
assignable -> VAR OPENCRO . expr CLOSECRO [ PP PE MM ME ASSIGN ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 47

State 47:
assignable -> VAR OPENCRO expr . CLOSECRO [ PP PE MM ME ASSIGN ]
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On CLOSECRO shift to state 48
-- On AND shift to state 39

State 48:
assignable -> VAR OPENCRO expr CLOSECRO . [ PP PE MM ME ASSIGN ]
-- On PP reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On PE reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On MM reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On ME reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On ASSIGN reduce production assignable -> VAR OPENCRO expr CLOSECRO 

State 49:
ifelse -> IF . expr terminated_stmt ELSE terminated_stmt [ WHILE EOF ELSE ]
ifelse -> IF . expr terminated_stmt [ WHILE EOF ELSE ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 50

State 50:
expr -> expr . PLUS expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . TIMES expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . MINUS expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . DIVIDE expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . EQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . NEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . LT expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . GT expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . LEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . GEQ expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . AND expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . OR expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
expr -> expr . PIN expr DP expr [ WHILE VAR TIMES PLUS PIN OR NEQ MINUS LT LEQ IF GT GEQ FOR EQ DO DIVIDE AND ACOPEN ]
ifelse -> IF expr . terminated_stmt ELSE terminated_stmt [ WHILE EOF ELSE ]
ifelse -> IF expr . terminated_stmt [ WHILE EOF ELSE ]
-- On WHILE shift to state 1
-- On VAR shift to state 45
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On IF shift to state 49
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On FOR shift to state 51
-- On EQ shift to state 35
-- On DO shift to state 53
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 87
-- On stmt shift to state 75
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 51:
fors -> FOR . OPENPAR stmt PV expr PV stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On OPENPAR shift to state 52

State 52:
fors -> FOR OPENPAR . stmt PV expr PV stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On VAR shift to state 45
-- On DO shift to state 53
-- On stmt shift to state 80
-- On dowhile shift to state 61
-- On assignable shift to state 62

State 53:
dowhile -> DO . terminated_stmt WHILE expr [ PV EOF CLOSEPAR ]
-- On WHILE shift to state 1
-- On VAR shift to state 45
-- On IF shift to state 49
-- On FOR shift to state 51
-- On DO shift to state 53
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 72
-- On stmt shift to state 75
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 54:
bloc -> ACOPEN . stmts ACOFER [ WHILE EOF ELSE ]
terminated_stmt -> ACOPEN . stmts ACOFER [ WHILE EOF ELSE ]
-- On VAR shift to state 45
-- On DO shift to state 53
-- On stmts_inner shift to state 55
-- On stmts shift to state 56
-- On stmt shift to state 58
-- On dowhile shift to state 61
-- On assignable shift to state 62
-- On ACOFER reduce production stmts_inner -> 

State 55:
stmts -> stmts_inner . [ ACOFER ]
-- On ACOFER reduce production stmts -> stmts_inner 

State 56:
bloc -> ACOPEN stmts . ACOFER [ WHILE EOF ELSE ]
terminated_stmt -> ACOPEN stmts . ACOFER [ WHILE EOF ELSE ]
-- On ACOFER shift to state 57

State 57:
bloc -> ACOPEN stmts ACOFER . [ WHILE EOF ELSE ]
terminated_stmt -> ACOPEN stmts ACOFER . [ WHILE EOF ELSE ]
-- On WHILE reduce production bloc -> ACOPEN stmts ACOFER 
-- On WHILE reduce production terminated_stmt -> ACOPEN stmts ACOFER 
-- On EOF reduce production bloc -> ACOPEN stmts ACOFER 
-- On EOF reduce production terminated_stmt -> ACOPEN stmts ACOFER 
-- On ELSE reduce production bloc -> ACOPEN stmts ACOFER 
-- On ELSE reduce production terminated_stmt -> ACOPEN stmts ACOFER 
** Conflict on WHILE EOF ELSE

State 58:
stmts_inner -> stmt . PV stmts_inner [ ACOFER ]
-- On PV shift to state 59

State 59:
stmts_inner -> stmt PV . stmts_inner [ ACOFER ]
-- On VAR shift to state 45
-- On DO shift to state 53
-- On stmts_inner shift to state 60
-- On stmt shift to state 58
-- On dowhile shift to state 61
-- On assignable shift to state 62
-- On ACOFER reduce production stmts_inner -> 

State 60:
stmts_inner -> stmt PV stmts_inner . [ ACOFER ]
-- On ACOFER reduce production stmts_inner -> stmt PV stmts_inner 

State 61:
stmt -> dowhile . [ PV EOF CLOSEPAR ]
-- On PV reduce production stmt -> dowhile 
-- On EOF reduce production stmt -> dowhile 
-- On CLOSEPAR reduce production stmt -> dowhile 

State 62:
stmt -> assignable . ASSIGN expr [ PV EOF CLOSEPAR ]
stmt -> assignable . PP [ PV EOF CLOSEPAR ]
stmt -> assignable . PE expr [ PV EOF CLOSEPAR ]
stmt -> assignable . ME expr [ PV EOF CLOSEPAR ]
stmt -> assignable . MM [ PV EOF CLOSEPAR ]
-- On PP shift to state 63
-- On PE shift to state 64
-- On MM shift to state 66
-- On ME shift to state 67
-- On ASSIGN shift to state 69

State 63:
stmt -> assignable PP . [ PV EOF CLOSEPAR ]
-- On PV reduce production stmt -> assignable PP 
-- On EOF reduce production stmt -> assignable PP 
-- On CLOSEPAR reduce production stmt -> assignable PP 

State 64:
stmt -> assignable PE . expr [ PV EOF CLOSEPAR ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 65

State 65:
expr -> expr . PLUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . TIMES expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . MINUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . DIVIDE expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . EQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . NEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . AND expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . OR expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . PIN expr DP expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
stmt -> assignable PE expr . [ PV EOF CLOSEPAR ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On PV reduce production stmt -> assignable PE expr 
-- On EOF reduce production stmt -> assignable PE expr 
-- On CLOSEPAR reduce production stmt -> assignable PE expr 

State 66:
stmt -> assignable MM . [ PV EOF CLOSEPAR ]
-- On PV reduce production stmt -> assignable MM 
-- On EOF reduce production stmt -> assignable MM 
-- On CLOSEPAR reduce production stmt -> assignable MM 

State 67:
stmt -> assignable ME . expr [ PV EOF CLOSEPAR ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 68

State 68:
expr -> expr . PLUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . TIMES expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . MINUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . DIVIDE expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . EQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . NEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . AND expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . OR expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . PIN expr DP expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
stmt -> assignable ME expr . [ PV EOF CLOSEPAR ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On PV reduce production stmt -> assignable ME expr 
-- On EOF reduce production stmt -> assignable ME expr 
-- On CLOSEPAR reduce production stmt -> assignable ME expr 

State 69:
stmt -> assignable ASSIGN . expr [ PV EOF CLOSEPAR ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 70

State 70:
expr -> expr . PLUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . TIMES expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . MINUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . DIVIDE expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . EQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . NEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . AND expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . OR expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . PIN expr DP expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
stmt -> assignable ASSIGN expr . [ PV EOF CLOSEPAR ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On PV reduce production stmt -> assignable ASSIGN expr 
-- On EOF reduce production stmt -> assignable ASSIGN expr 
-- On CLOSEPAR reduce production stmt -> assignable ASSIGN expr 

State 71:
terminated_stmt -> whiles . [ WHILE EOF ELSE ]
-- On WHILE reduce production terminated_stmt -> whiles 
-- On EOF reduce production terminated_stmt -> whiles 
-- On ELSE reduce production terminated_stmt -> whiles 

State 72:
dowhile -> DO terminated_stmt . WHILE expr [ PV EOF CLOSEPAR ]
-- On WHILE shift to state 73

State 73:
dowhile -> DO terminated_stmt WHILE . expr [ PV EOF CLOSEPAR ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 74

State 74:
dowhile -> DO terminated_stmt WHILE expr . [ PV EOF CLOSEPAR ]
expr -> expr . PLUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . TIMES expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . MINUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . DIVIDE expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . EQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . NEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . LEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . GEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . AND expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . OR expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
expr -> expr . PIN expr DP expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE CLOSEPAR AND ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On PV reduce production dowhile -> DO terminated_stmt WHILE expr 
-- On EOF reduce production dowhile -> DO terminated_stmt WHILE expr 
-- On CLOSEPAR reduce production dowhile -> DO terminated_stmt WHILE expr 

State 75:
terminated_stmt -> stmt . PV [ WHILE EOF ELSE ]
-- On PV shift to state 76

State 76:
terminated_stmt -> stmt PV . [ WHILE EOF ELSE ]
-- On WHILE reduce production terminated_stmt -> stmt PV 
-- On EOF reduce production terminated_stmt -> stmt PV 
-- On ELSE reduce production terminated_stmt -> stmt PV 

State 77:
terminated_stmt -> ifelse . [ WHILE EOF ELSE ]
-- On WHILE reduce production terminated_stmt -> ifelse 
-- On EOF reduce production terminated_stmt -> ifelse 
-- On ELSE reduce production terminated_stmt -> ifelse 

State 78:
terminated_stmt -> fors . [ WHILE EOF ELSE ]
-- On WHILE reduce production terminated_stmt -> fors 
-- On EOF reduce production terminated_stmt -> fors 
-- On ELSE reduce production terminated_stmt -> fors 

State 79:
terminated_stmt -> bloc . [ WHILE EOF ELSE ]
-- On WHILE reduce production terminated_stmt -> bloc 
-- On EOF reduce production terminated_stmt -> bloc 
-- On ELSE reduce production terminated_stmt -> bloc 

State 80:
fors -> FOR OPENPAR stmt . PV expr PV stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On PV shift to state 81

State 81:
fors -> FOR OPENPAR stmt PV . expr PV stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 82

State 82:
expr -> expr . PLUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . EQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . LT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . GT expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . AND expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . OR expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
expr -> expr . PIN expr DP expr [ TIMES PV PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE AND ]
fors -> FOR OPENPAR stmt PV expr . PV stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On TIMES shift to state 13
-- On PV shift to state 83
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39

State 83:
fors -> FOR OPENPAR stmt PV expr PV . stmt CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On VAR shift to state 45
-- On DO shift to state 53
-- On stmt shift to state 84
-- On dowhile shift to state 61
-- On assignable shift to state 62

State 84:
fors -> FOR OPENPAR stmt PV expr PV stmt . CLOSEPAR terminated_stmt [ WHILE EOF ELSE ]
-- On CLOSEPAR shift to state 85

State 85:
fors -> FOR OPENPAR stmt PV expr PV stmt CLOSEPAR . terminated_stmt [ WHILE EOF ELSE ]
-- On WHILE shift to state 1
-- On VAR shift to state 45
-- On IF shift to state 49
-- On FOR shift to state 51
-- On DO shift to state 53
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 86
-- On stmt shift to state 75
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 86:
fors -> FOR OPENPAR stmt PV expr PV stmt CLOSEPAR terminated_stmt . [ WHILE EOF ELSE ]
-- On WHILE reduce production fors -> FOR OPENPAR stmt PV expr PV stmt CLOSEPAR terminated_stmt 
-- On EOF reduce production fors -> FOR OPENPAR stmt PV expr PV stmt CLOSEPAR terminated_stmt 
-- On ELSE reduce production fors -> FOR OPENPAR stmt PV expr PV stmt CLOSEPAR terminated_stmt 

State 87:
ifelse -> IF expr terminated_stmt . ELSE terminated_stmt [ WHILE EOF ELSE ]
ifelse -> IF expr terminated_stmt . [ WHILE EOF ELSE ]
-- On ELSE shift to state 88
-- On WHILE reduce production ifelse -> IF expr terminated_stmt 
-- On EOF reduce production ifelse -> IF expr terminated_stmt 
-- On ELSE reduce production ifelse -> IF expr terminated_stmt 
** Conflict on ELSE

State 88:
ifelse -> IF expr terminated_stmt ELSE . terminated_stmt [ WHILE EOF ELSE ]
-- On WHILE shift to state 1
-- On VAR shift to state 45
-- On IF shift to state 49
-- On FOR shift to state 51
-- On DO shift to state 53
-- On ACOPEN shift to state 54
-- On whiles shift to state 71
-- On terminated_stmt shift to state 89
-- On stmt shift to state 75
-- On ifelse shift to state 77
-- On fors shift to state 78
-- On dowhile shift to state 61
-- On bloc shift to state 79
-- On assignable shift to state 62

State 89:
ifelse -> IF expr terminated_stmt ELSE terminated_stmt . [ WHILE EOF ELSE ]
-- On WHILE reduce production ifelse -> IF expr terminated_stmt ELSE terminated_stmt 
-- On EOF reduce production ifelse -> IF expr terminated_stmt ELSE terminated_stmt 
-- On ELSE reduce production ifelse -> IF expr terminated_stmt ELSE terminated_stmt 

State 90:
whiles -> WHILE expr terminated_stmt . [ WHILE EOF ELSE ]
-- On WHILE reduce production whiles -> WHILE expr terminated_stmt 
-- On EOF reduce production whiles -> WHILE expr terminated_stmt 
-- On ELSE reduce production whiles -> WHILE expr terminated_stmt 

State 91:
assignable -> VAR . [ PP PE MM ME ASSIGN ]
assignable -> VAR . OPENCRO expr CLOSECRO [ PP PE MM ME ASSIGN ]
expr -> VAR . [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> VAR . OPENCRO expr CLOSECRO [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
-- On OPENCRO shift to state 92
-- On TIMES reduce production expr -> VAR 
-- On PP reduce production assignable -> VAR 
-- On PLUS reduce production expr -> VAR 
-- On PIN reduce production expr -> VAR 
-- On PE reduce production assignable -> VAR 
-- On OR reduce production expr -> VAR 
-- On NEQ reduce production expr -> VAR 
-- On MM reduce production assignable -> VAR 
-- On MINUS reduce production expr -> VAR 
-- On ME reduce production assignable -> VAR 
-- On LT reduce production expr -> VAR 
-- On LEQ reduce production expr -> VAR 
-- On GT reduce production expr -> VAR 
-- On GEQ reduce production expr -> VAR 
-- On EQ reduce production expr -> VAR 
-- On EOF reduce production expr -> VAR 
-- On DIVIDE reduce production expr -> VAR 
-- On ASSIGN reduce production assignable -> VAR 
-- On AND reduce production expr -> VAR 

State 92:
assignable -> VAR OPENCRO . expr CLOSECRO [ PP PE MM ME ASSIGN ]
expr -> VAR OPENCRO . expr CLOSECRO [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
-- On VAR shift to state 2
-- On STRING shift to state 4
-- On OPENPAR shift to state 5
-- On NOT shift to state 6
-- On MINUS shift to state 7
-- On INT shift to state 8
-- On FLOAT shift to state 9
-- On expr shift to state 93

State 93:
assignable -> VAR OPENCRO expr . CLOSECRO [ PP PE MM ME ASSIGN ]
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
expr -> VAR OPENCRO expr . CLOSECRO [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ DIVIDE CLOSECRO AND ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On CLOSECRO shift to state 94
-- On AND shift to state 39

State 94:
assignable -> VAR OPENCRO expr CLOSECRO . [ PP PE MM ME ASSIGN ]
expr -> VAR OPENCRO expr CLOSECRO . [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
-- On TIMES reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PP reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On PLUS reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PIN reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On PE reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On OR reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On NEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On MM reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On MINUS reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On ME reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On LT reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On LEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On GT reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On GEQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On EQ reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On EOF reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On DIVIDE reduce production expr -> VAR OPENCRO expr CLOSECRO 
-- On ASSIGN reduce production assignable -> VAR OPENCRO expr CLOSECRO 
-- On AND reduce production expr -> VAR OPENCRO expr CLOSECRO 

State 95:
start2 -> terminated_stmt . [ EOF ]
-- On EOF reduce production start2 -> terminated_stmt 

State 96:
start2 -> stmt . [ EOF ]
terminated_stmt -> stmt . PV [ EOF ]
-- On PV shift to state 76
-- On EOF reduce production start2 -> stmt 

State 97:
start -> start2 . EOF [ # ]
-- On EOF shift to state 98

State 98:
start -> start2 EOF . [ # ]
-- On # reduce production start -> start2 EOF 

State 99:
start' -> start . [ # ]
-- On # accept start

State 100:
expr -> expr . PLUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . TIMES expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . MINUS expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . DIVIDE expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . EQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . NEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . LT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . GT expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . LEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . GEQ expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . AND expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . OR expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
expr -> expr . PIN expr DP expr [ TIMES PLUS PIN OR NEQ MINUS LT LEQ GT GEQ EQ EOF DIVIDE AND ]
start2 -> expr . [ EOF ]
-- On TIMES shift to state 13
-- On PLUS shift to state 15
-- On PIN shift to state 19
-- On OR shift to state 21
-- On NEQ shift to state 23
-- On MINUS shift to state 25
-- On LT shift to state 27
-- On LEQ shift to state 29
-- On GT shift to state 31
-- On GEQ shift to state 33
-- On EQ shift to state 35
-- On DIVIDE shift to state 17
-- On AND shift to state 39
-- On EOF reduce production start2 -> expr 

State 101:
start1' -> . start1 [ # ]
-- On INT shift to state 102
-- On start1 shift to state 103
-- On int_plus_left shift to state 104

State 102:
int_plus_left -> INT . [ PLUS INT ]
-- On PLUS reduce production int_plus_left -> INT 
-- On INT reduce production int_plus_left -> INT 

State 103:
start1' -> start1 . [ # ]
-- On # accept start1

State 104:
int_plus_left -> int_plus_left . PLUS INT [ PLUS INT ]
start1 -> int_plus_left . int_plus_right manual_arith_plus_r manual_arith_plus_l EOF [ # ]
-- On PLUS shift to state 105
-- On INT shift to state 107
-- On int_plus_right shift to state 110

State 105:
int_plus_left -> int_plus_left PLUS . INT [ PLUS INT ]
-- On INT shift to state 106

State 106:
int_plus_left -> int_plus_left PLUS INT . [ PLUS INT ]
-- On PLUS reduce production int_plus_left -> int_plus_left PLUS INT 
-- On INT reduce production int_plus_left -> int_plus_left PLUS INT 

State 107:
int_plus_right -> INT . [ INT ]
int_plus_right -> INT . PLUS int_plus_right [ INT ]
-- On PLUS shift to state 108
-- On INT reduce production int_plus_right -> INT 

State 108:
int_plus_right -> INT PLUS . int_plus_right [ INT ]
-- On INT shift to state 107
-- On int_plus_right shift to state 109

State 109:
int_plus_right -> INT PLUS int_plus_right . [ INT ]
-- On INT reduce production int_plus_right -> INT PLUS int_plus_right 

State 110:
start1 -> int_plus_left int_plus_right . manual_arith_plus_r manual_arith_plus_l EOF [ # ]
-- On INT shift to state 111
-- On manual_arith_times_r shift to state 112
-- On manual_arith_plus_r shift to state 118
-- On manual_arith_atom shift to state 115

State 111:
manual_arith_atom -> INT . [ TIMES PLUS INT EOF ]
-- On TIMES reduce production manual_arith_atom -> INT 
-- On PLUS reduce production manual_arith_atom -> INT 
-- On INT reduce production manual_arith_atom -> INT 
-- On EOF reduce production manual_arith_atom -> INT 

State 112:
manual_arith_plus_r -> manual_arith_times_r . PLUS manual_arith_plus_r [ INT ]
manual_arith_plus_r -> manual_arith_times_r . [ INT ]
-- On PLUS shift to state 113
-- On INT reduce production manual_arith_plus_r -> manual_arith_times_r 

State 113:
manual_arith_plus_r -> manual_arith_times_r PLUS . manual_arith_plus_r [ INT ]
-- On INT shift to state 111
-- On manual_arith_times_r shift to state 112
-- On manual_arith_plus_r shift to state 114
-- On manual_arith_atom shift to state 115

State 114:
manual_arith_plus_r -> manual_arith_times_r PLUS manual_arith_plus_r . [ INT ]
-- On INT reduce production manual_arith_plus_r -> manual_arith_times_r PLUS manual_arith_plus_r 

State 115:
manual_arith_times_r -> manual_arith_atom . TIMES manual_arith_times_r [ PLUS INT ]
manual_arith_times_r -> manual_arith_atom . [ PLUS INT ]
-- On TIMES shift to state 116
-- On PLUS reduce production manual_arith_times_r -> manual_arith_atom 
-- On INT reduce production manual_arith_times_r -> manual_arith_atom 

State 116:
manual_arith_times_r -> manual_arith_atom TIMES . manual_arith_times_r [ PLUS INT ]
-- On INT shift to state 111
-- On manual_arith_times_r shift to state 117
-- On manual_arith_atom shift to state 115

State 117:
manual_arith_times_r -> manual_arith_atom TIMES manual_arith_times_r . [ PLUS INT ]
-- On PLUS reduce production manual_arith_times_r -> manual_arith_atom TIMES manual_arith_times_r 
-- On INT reduce production manual_arith_times_r -> manual_arith_atom TIMES manual_arith_times_r 

State 118:
start1 -> int_plus_left int_plus_right manual_arith_plus_r . manual_arith_plus_l EOF [ # ]
-- On INT shift to state 111
-- On manual_arith_times_l shift to state 119
-- On manual_arith_plus_l shift to state 122
-- On manual_arith_atom shift to state 125

State 119:
manual_arith_plus_l -> manual_arith_times_l . [ PLUS EOF ]
manual_arith_times_l -> manual_arith_times_l . TIMES manual_arith_atom [ TIMES PLUS EOF ]
-- On TIMES shift to state 120
-- On PLUS reduce production manual_arith_plus_l -> manual_arith_times_l 
-- On EOF reduce production manual_arith_plus_l -> manual_arith_times_l 

State 120:
manual_arith_times_l -> manual_arith_times_l TIMES . manual_arith_atom [ TIMES PLUS EOF ]
-- On INT shift to state 111
-- On manual_arith_atom shift to state 121

State 121:
manual_arith_times_l -> manual_arith_times_l TIMES manual_arith_atom . [ TIMES PLUS EOF ]
-- On TIMES reduce production manual_arith_times_l -> manual_arith_times_l TIMES manual_arith_atom 
-- On PLUS reduce production manual_arith_times_l -> manual_arith_times_l TIMES manual_arith_atom 
-- On EOF reduce production manual_arith_times_l -> manual_arith_times_l TIMES manual_arith_atom 

State 122:
manual_arith_plus_l -> manual_arith_plus_l . PLUS manual_arith_times_l [ PLUS EOF ]
start1 -> int_plus_left int_plus_right manual_arith_plus_r manual_arith_plus_l . EOF [ # ]
-- On PLUS shift to state 123
-- On EOF shift to state 126

State 123:
manual_arith_plus_l -> manual_arith_plus_l PLUS . manual_arith_times_l [ PLUS EOF ]
-- On INT shift to state 111
-- On manual_arith_times_l shift to state 124
-- On manual_arith_atom shift to state 125

State 124:
manual_arith_plus_l -> manual_arith_plus_l PLUS manual_arith_times_l . [ PLUS EOF ]
manual_arith_times_l -> manual_arith_times_l . TIMES manual_arith_atom [ TIMES PLUS EOF ]
-- On TIMES shift to state 120
-- On PLUS reduce production manual_arith_plus_l -> manual_arith_plus_l PLUS manual_arith_times_l 
-- On EOF reduce production manual_arith_plus_l -> manual_arith_plus_l PLUS manual_arith_times_l 

State 125:
manual_arith_times_l -> manual_arith_atom . [ TIMES PLUS EOF ]
-- On TIMES reduce production manual_arith_times_l -> manual_arith_atom 
-- On PLUS reduce production manual_arith_times_l -> manual_arith_atom 
-- On EOF reduce production manual_arith_times_l -> manual_arith_atom 

State 126:
start1 -> int_plus_left int_plus_right manual_arith_plus_r manual_arith_plus_l EOF . [ # ]
-- On # reduce production start1 -> int_plus_left int_plus_right manual_arith_plus_r manual_arith_plus_l EOF 

